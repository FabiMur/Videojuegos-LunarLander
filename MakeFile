# Detectar el sistema operativo
ifeq ($(OS),Windows_NT)
    RM = del /Q
    TARGET = lunar_lander.exe
    EXEC = .\$(TARGET)
    CLEAN_NULL = 2>nul
	MAKE = mingw32-make -f MakeFile
else
    RM = rm -f
    TARGET = lunar_lander
    EXEC = ./$(TARGET)
    CLEAN_NULL =
	MAKE = make
endif

# Compilador
CC = gcc

# Flags de compilación
CFLAGS = -Wall -Wextra -Wpedantic -g -mwindows

# Flags de enlace
LDFLAGS = -lwinmm

# Directorios de código fuente
SRC_DIR = code
RES_DIR = resources

# Archivos fuente (todos los .c en code/ y resources/ + main.c)
SRCS = $(wildcard $(SRC_DIR)/*.c $(RES_DIR)/*.c) main.c

# Archivos objeto (se reemplaza .c por .o)
OBJS = $(SRCS:.c=.o)

# Regla principal
all: $(TARGET)

# Compilar el ejecutable
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# Compilar cada archivo fuente en un objeto
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@ $(LDFLAGS)

# Limpiar archivos compilados
clean:
	-$(RM) $(SRC_DIR)\*.o $(RES_DIR)\*.o main.o $(TARGET) $(CLEAN_NULL)
# Recompilar todo y ejecutar
run: 
	$(MAKE) clean
	$(MAKE)
	$(EXEC)

