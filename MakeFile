# Detectar el sistema operativo
ifeq ($(OS),Windows_NT)
    ifeq ($(shell uname),) # CMD
        RM = del /Q
        TARGET = lunar_lander.exe
        EXEC = .\$(TARGET)
        CLEAN_NULL = 2>nul
        MAKE = mingw32-make -f MakeFile
    else # Git Bash
        RM = rm -f
        TARGET = lunar_lander.exe
        EXEC = ./$(TARGET)
        CLEAN_NULL =
        MAKE = make
    endif
else
    RM = rm -f
    TARGET = lunar_lander
    EXEC = ./$(TARGET)
    CLEAN_NULL =
    MAKE = make
endif


# Compilador y flags de compilación
CC      = gcc
CFLAGS  = -Wall -Wextra -Wpedantic -g

# Flags para el linker
LDFLAGS = -mwindows
LDLIBS  = -lgdi32 -lwinmm

# Directorios de código
SRC_DIR = code
RES_DIR = resources

# Listado de fuentes y objetos
SRCS    = $(wildcard $(SRC_DIR)/*.c $(RES_DIR)/*.c) main.c
OBJS    = $(SRCS:.c=.o)

# Archivos objeto (se reemplaza .c por .o)
OBJS = $(SRCS:.c=.o)

# Regla principal
all: $(TARGET)

# Regla de link
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) $^ -o $@ $(LDLIBS)

# Regla genérica para compilar .c → .o
%.o: %.c
	$(CC) $(CFLAGS) $(LDFLAGS) -c $< -o $@ $(LDLIBS)


# Limpieza
clean:
	-$(RM) $(OBJS) $(TARGET) $(CLEAN_NULL)

# Ejecutar tras recompilar
run:
	$(MAKE) clean
	$(MAKE)
	$(EXEC)